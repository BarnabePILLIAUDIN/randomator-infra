name: Build and publish Helm chart

on:
  push:
    branches:
      - main
    paths:
      - 'charts/**'
      - '.github/workflows/build-helm-chart.yaml'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-publish:
    defaults:
      run:
        working-directory: helm
    environment: helm
    runs-on: ubuntu-latest
    env:
      HELM_EXPERIMENTAL_OCI: "1"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: debug
        run: pwd && ls -lah
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.12.0'

      - name: Lint Helm chart(s)
        run: |
          # Look for charts under ./charts/ or directly in the working dir (./)
          if [ -d "./charts" ]; then
            helm lint ./charts || true
          elif [ -f "./Chart.yaml" ]; then
            echo "Found Chart.yaml in working dir, linting current directory"
            helm lint . || true
          else
            echo "No charts directory or Chart.yaml found"
          fi

      - name: Package Helm chart(s)
        run: |
          mkdir -p ./packaged
          # package charts under ./charts or package the chart in the working dir if Chart.yaml present
          if [ -d "./charts" ]; then
            helm package ./charts -d ./packaged
            ls -la ./packaged
          elif [ -f "./Chart.yaml" ]; then
            echo "Packaging chart found in working dir"
            helm package . -d ./packaged
            ls -la ./packaged
          else
            echo "No packaged charts found"
          fi

      - name: Login to GitHub Container Registry (ghcr.io)
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: |
          echo "${GITHUB_TOKEN}" | helm registry login ghcr.io -u "${{ github.actor }}" --password-stdin
      - name: Push packaged charts to GHCR (OCI)
        run: |
          # GHCR/OCI references must be lowercase; transform repository to lowercase
          REPO_LOWER="$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')"
          if compgen -G "./packaged/*.tgz" > /dev/null; then
            for f in ./packaged/*.tgz; do
              echo "Found packaged chart: $f"
              # ensure filename is lowercase because OCI references and GHCR are case-sensitive
              fname=$(basename "$f")
              fname_lower=$(echo "$fname" | tr '[:upper:]' '[:lower:]')
              if [ "$fname" != "$fname_lower" ]; then
                echo "Renaming $fname -> $fname_lower"
                mv "$f" "./packaged/$fname_lower"
                f="./packaged/$fname_lower"
              fi
              echo "Pushing $f to oci://ghcr.io/${REPO_LOWER}"
              helm push "$f" oci://ghcr.io/${REPO_LOWER}
            done
          else
            echo "No packaged charts found, skipping push"
          fi